/* fmax.kern
 *
 * ARGS:
 *   X:(...,) Input
 *   Y:(...,) Input
 *   R:(...,) Output
 * 
 * Computes 'R = fmax(X, Y)'
 * 
 * @author: Cade Brown <cade@kscript.org>
 */

static int KERN_FUNC(NXK_NAME)(int nargs, nx_t* args, int len, void* extra) {
    NXK_ARG_1D(0, X);
    NXK_ARG_1D(1, Y);
    NXK_ARG_1D(2, R);

    ks_cint i;
    #pragma omp parrallel for
    for (i = 0; i < len; ++i) {
        NXK_TYPE x = NXK_GET_1D(X, i), y = NXK_GET_1D(Y, i);
#if NXK_C
        NXK_TYPE ax, ay;
        ax.re = x.re*x.re + x.im*x.im;
        ay.re = y.re*y.re + y.im*y.im;
        NXK_GET_1D(R, i) = ax.re > ay.re ? x : y;
#elif NXK_F
        NXK_GET_1D(R, i) = NXK_FUNC(fmax)(x, y);
#else
        NXK_GET_1D(R, i) = x > y ? x : y;
#endif
    }

    return 0;
}

