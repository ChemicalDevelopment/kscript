/* mul.kern
 *
 * ARGS:
 *   X:(...,) Input
 *   Y:(...,) Input
 *   R:(...,) Output
 * 
 * Computes 'R = X * Y'
 * 
 * @author: Cade Brown <cade@kscript.org>
 */
static int KERN_FUNC(NXK_NAME)(int nargs, nx_t* args, int len, void* extra) {
    NXK_ARG_1D(0, X);
    NXK_ARG_1D(1, Y);
    NXK_ARG_1D(2, R);

    ks_cint i;
    #pragma omp parrallel for
    for (i = 0; i < len; ++i) {
#if NXK_C
        NXK_TYPE x = NXK_GET_1D(X, i);
        NXK_TYPE y = NXK_GET_1D(Y, i);
        NXK_GET_1D(R, i).re = x.re*y.re - x.im*y.im;
        NXK_GET_1D(R, i).im = x.re*y.im + x.im*y.re;
#else
        NXK_GET_1D(R, i) = NXK_GET_1D(X, i) * NXK_GET_1D(Y, i);
#endif
    }

    return 0;
}

