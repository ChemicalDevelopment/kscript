/* norm_fro.kern
 *
 * ARGS:
 *   X:(...,) Input
 *   R:(...,) Output
 * 
 * Computes 'R = norm_fro(X)'
 * 
 * @author: Cade Brown <cade@kscript.org>
 */

static int KERN_FUNC(NXK_NAME)(int nargs, nx_t* args, int rank, ks_size_t* shape, void* extra) {
    assert(rank == 2);
    NXK_ARG_2D(0, X);
    NXK_ARG_2D(1, R); /* [1x1] matrix */

    /* RxC matrix */
    int nR = shape[0], nC = shape[1];

    /* Sum of '|X[i,j]|**2' */
#if NXK_C
    NXK_ATTR(r) suma = 0;
#else
    NXK_TYPE suma = 0;
#endif

    ks_cint i, j;
    for (i = 0; i < nR; ++i) {
        for (j = 0; j < nC; ++j) {
            NXK_TYPE x = NXK_GET_2D(X, i, j);
#if NXK_C
            suma += x.re*x.re + x.im*x.im;
#else
            suma += x * x;
#endif
        }
    }

    /* Take square root of the sums */
#if NXK_C
    NXK_GET_2D(R, 0, 0).re = NXK_FUNC(rsqrt)(suma);
    NXK_GET_2D(R, 0, 0).im = 0;
#else
    NXK_GET_2D(R, 0, 0) = NXK_FUNC(sqrt)(suma);
#endif

    return 0;
}

